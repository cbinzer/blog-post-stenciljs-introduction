/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CbAlert {
        "message": string;
        "visible": boolean;
    }
    interface CbAlertWrapper {
    }
}
declare global {
    interface HTMLCbAlertElement extends Components.CbAlert, HTMLStencilElement {
    }
    var HTMLCbAlertElement: {
        prototype: HTMLCbAlertElement;
        new (): HTMLCbAlertElement;
    };
    interface HTMLCbAlertWrapperElement extends Components.CbAlertWrapper, HTMLStencilElement {
    }
    var HTMLCbAlertWrapperElement: {
        prototype: HTMLCbAlertWrapperElement;
        new (): HTMLCbAlertWrapperElement;
    };
    interface HTMLElementTagNameMap {
        "cb-alert": HTMLCbAlertElement;
        "cb-alert-wrapper": HTMLCbAlertWrapperElement;
    }
}
declare namespace LocalJSX {
    interface CbAlert {
        "message"?: string;
        "onCloseClicked"?: (event: CustomEvent<MouseEvent>) => void;
        "visible"?: boolean;
    }
    interface CbAlertWrapper {
    }
    interface IntrinsicElements {
        "cb-alert": CbAlert;
        "cb-alert-wrapper": CbAlertWrapper;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cb-alert": LocalJSX.CbAlert & JSXBase.HTMLAttributes<HTMLCbAlertElement>;
            "cb-alert-wrapper": LocalJSX.CbAlertWrapper & JSXBase.HTMLAttributes<HTMLCbAlertWrapperElement>;
        }
    }
}
